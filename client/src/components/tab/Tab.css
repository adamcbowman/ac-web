@import "../../styles/components.css";
@import "../../styles/colors.css";
@import "../../styles/shapes.css";

:root {
    --border-width: 5px;
}

.List {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;

	padding: 0;
	margin: 0;
    list-style: none;
}

.List--Stacked {
    composes: List;

    flex-direction: column;

    & .ListItem {
        position: absolute;
        left: -99999px;
    }

    & .ListItem--Active {
        position: relative;
        left: auto;
        order: -1;

        & .ExpandButton {
            display: block;
        }
    }
}

.List--Opened {
    & .ListItem {
        position: relative;
        left: auto;
    }
}

.ListItem {
    flex: 1;

    position: relative;
	padding: 1em;
	text-align: center;
	color: var(--black);
    white-space: nowrap;
	cursor: pointer;
    text-decoration: none;

    & > a > svg {
        /* ICON */
        position: relative;
        top: 2px;
    }

    & .ExpandButton {
        display: none;
    }

	&:hover {
		background-color: var(--component-bg-hover);
	}
}

.ListItem--Active {
	composes: ListItem;

	background-color: var(--component-active-bg);
    color: white;

	&:hover {
		background-color: var(--component-active-bg);
	}
}

.ListItem--Disabled {
    composes: ListItem;

    cursor: default;
    opacity: 0.5;

    &:hover {
		background-color: inherit;
	}
}

.ListItem--Arrow {
    composes: import ArrowElementDown from "../../styles/shapes.css";

    position: absolute;
    top: calc(100% + var(--border-width));
    left: 50%;
    z-index: 1;
    border-top-color: transparent;
    margin-left: calc(-1 * var(--arrow-width));

    &.ListItem--Active {
        border-top-color: var(--primary);
    }
}

.Panel {
    position: absolute;
    left: -99999px;
    top: -99999px;
	margin: 1em;
}

.Panel--Active {
	composes: Panel;

    position: static;
}

.ExpandButton {
    position: absolute 0 0 0 inherit;
    height: 100%;
}

/* THEMES */
.List--Compact {
    background-color: var(--gray-lighter);

    & .ListItem {
        border-bottom: var(--border-width) solid var(--component-bg);
        z-index: 1;
    }

    & .ListItem--Active {
        background-color: var(--primary);
        border-bottom-color: var(--primary);
    }
}

.List--Loose {
    background-color: color(var(--primary) lightness(75%));

    & .ListItem {
        display: inline-block;
        position: relative;
        padding: 1.5em 2.5em;
        font-weight: 700;
        color: white;

        &:after {
            /*
                Do not put border-right, it will break in IE when JS code when
                try measure widths
             */
            content: "";
            position: absolute 0;
            background-color: white;
            height: 100%;
            width: 1px;
        }
    }
}

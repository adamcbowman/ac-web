swagger: '2.0'
info:
  version: 2.0.0
  title: Avalanche Canada API
  contact:
    name: Avalanche Canada
    email: support@avalanche.ca
  license:
    name: Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International
    url: 'https://creativecommons.org/licenses/by-nc-nd/4.0/legalcode'
  description: >
    # Changes in v2.0

    - Updated the `Forecast` object
      - Added the `fxType` field to specify if the forecast is from AvID and
        thus if it contains the extra `avid*` properties.
      - Added the `avidOffseasonComment` to for additional messaging when the
        `dangerMode` field is set to any of "Spring situation", "Off season" or
        "Early season"
      - Added the `avidOffseasonMessage` to for a more specific off season
        message when the `dangerMode` field is set to any of "Spring
        situation", "Off season" or "Early season"
      - Added the `avidTerrainAndTravel` field to list the top-level terrain
        and travel advice.  This is change is not backwards compatable with
        older versions of the API.
      - Added the `avidConfidence` field to give structured access to the data
        from the 'confidence'
      - Added the `fxPublishTime` field to represent the *acutal* time that the
        forecast was published. This will likely be different from the
        `dateIssued` time which is meant to represent the predicitons valid
        period 
      - Added the `iconSet` field to represent what Icon should be displayed
        on the map for what time periods.

    # Avalanche Canada API

    The documentation for this existing API is ongoing so you may notice changes
    to the API documentation without updates to the version number. Version
    number updates are reserved for when the functionality of the API changes.


    **Please** contact us if you notice any discrepancies between this
    documentation and the actual service.

    # Arcteryx / ACMG Mountain conditions reports

    Mountain Conditions Reports are provided ACMG / Arcteryx.
    See the [Mountain Conditions Site](https://mountainconditions.com/) for more reports and information.

host: www.avalanche.ca
basePath: /api
schemes:
  - https

tags:
  - name: Forecasts
    description: "Avalanche Canada forecast data"
  - name: Mountain Conditions
    description: "Arcteryx / ACMG Mountain conditions reports"

paths:
  '/features/metadata':
    get:
      tags:
        - Forecasts
      summary: List All feature meta data
      description: >
        This lists all the feature metadata that can be used to query api
        information.

        It lacks only the GeoJSON data requried to draw specific regions on a
        map
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ForecastMetaData'

  '/forecasts':
    get:
      tags:
        - Forecasts
      summary: Get all forecast regions with Geo Data
      description: >
        Returns the GeoJSON features for 
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ForecastGeoJSON'

  '/forecasts/ALL.json':
    get:
      tags:
        - Forecasts
      summary: Get a dictionary of all current forecasts keyed by region-id
      produces:
        - application/json
      responses:
        '200':
          description: Success
          schema:
            type: object
            additionalProperties:
                $ref: '#/definitions/Forecast'

  '/forecasts/{region}.json':
    get:
      tags:
        - Forecasts
      summary: Get a forecast for a specific region
      produces:
        - application/json
      parameters:
        - name: region
          required: true
          in: path
          type: string
          description: >
            The region id that is listed int `/features/metadata` objects
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Forecast'
        '404':
          description: Region does not exist

  '/bulletin-archive/{date}/{region}.json':
    get:
      tags:
        - Forecasts
      summary: Get a historical forecast for a region
      produces:
        - application/json
      parameters:
        - name: region
          required: true
          in: path
          type: string
          description: >
            The region id that is listed int `/features/metadata` objects
        - name: date
          required: true
          in: path
          type: string
          format: date
          description: |
            ISO8661 date to get the bulletin for.
            **Examples:**
              * `2017-01-01`
              * `2017-01-01T16:43:00`
              * `2017-01-01T16:43:00Z`
              * `2017-01-01T16:43:00-0800`
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Forecast'
        '404':
          description: Region does not exist
  /mcr:
    get:
      tags:
        - Mountain Conditions
      summary: Get lastest MCR posts
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/MountainConditionsReport'
  '/mcr/{report_id}':
    get:
      tags:
        - Mountain Conditions
      summary: Get specific MCR post
      parameters:
        - name: report_id
          in: path
          type: string
          required: true
          description: The report ID
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/MountainConditionsReport'

definitions:
  ForecastMetaData:
    type: object
    properties:
      hot-zones:
        type: array
        items:
          type: object
          required:
            - name
            - id
            - type
            - centroid
            - bbox
          properties:
            name:
              $ref: '#/definitions/FeaturesMetaDataCommon/properties/name'
            id:
              $ref: '#/definitions/FeaturesMetaDataCommon/properties/id'
            type:
              $ref: '#/definitions/FeaturesMetaDataCommon/properties/type'
            centroid:
              $ref: '#/definitions/FeaturesMetaDataCommon/properties/centroid'
            bbox:
              $ref: '#/definitions/FeaturesMetaDataCommon/properties/bbox'
      forecast-regions:
        type: array
        items:
          type: object
          required:
            - name
            - id
            - type
            - centroid
            - bbox
            - url
            - forecastUrl
            - dangerIconUrl
            - owner
          properties:
            name:
              $ref: '#/definitions/FeaturesMetaDataCommon/properties/name'
            id:
              $ref: '#/definitions/FeaturesMetaDataCommon/properties/id'
            type:
              $ref: '#/definitions/FeaturesMetaDataCommon/properties/type'
            centroid:
              $ref: '#/definitions/FeaturesMetaDataCommon/properties/centroid'
            bbox:
              $ref: '#/definitions/FeaturesMetaDataCommon/properties/bbox'
            url:
              $ref: '#/definitions/FeaturesMetaDataCommon/properties/url'
            externalUrl:
              $ref: '#/definitions/FeaturesMetaDataCommon/properties/externalUrl'
            foreacstUrl:
              $ref: '#/definitions/FeaturesMetaDataCommon/properties/forecastUrl'
            dangerIconUrl:
              $ref: '#/definitions/FeaturesMetaDataCommon/properties/dangerIconUrl'
            owner:
              $ref: '#/definitions/FeaturesMetaDataCommon/properties/owner'
  Forecast:
    type: object
    required:
      - id
      - region
      - forecaster
      - dateIssued
      - validUntil
      - bulletinTitle
      - highlights
      - confidence
      - avalancheSummary
      - snowpackSummary
      - weatherForecast
      - dangerMode
      - dangerRatings
      - problems
    properties:
      id:
        type: string
        example: PC-19_2017-07-11T2200_0ae192fc-6e4c-430c-ae76-0ec34e51ff2b
      fxFormat:
        type: string
        enum: ['avalx', 'avid']
        description: >
          The format that produced this version of the forecast. When absent
          assume the value of "avalx".  Use this field to specifies if the
          fields "avidConfidence" and "avidTerrainAndTravel" exist and if the
          `Forecast.problems[].travelAndTerrainAdvice` will contain any data.
      region:
        type: string
        example: cariboos
      forecaster:
        type: string
        example: wharding
      dateIssued:
        type: string
        format: date
        example: '2017-07-11T22:00:00Z'
      validUntil:
        type: string
        format: date
        example: '0001-01-01T00:00:00Z'
      bulletinTitle:
        type: string
        example: Cariboos
      highlights:
        type: string
        description: The bulletin headline
      confidence:
        type: string
      avidConfidence:
        type: object
        description: >
          A separated version of the standard `confidence` field to make formatting easier.
        properties:
          rating:
            type: string
            example: "Low"
          statements:
            type: array
            items:
               type: string
               example: "Uncertainty is due to how buried persistent weak layers will react with the forecast incoming weather."
      avalancheSummary:
        type: string
        format: HTML
        description: HTML Text describing the avalanche condition
      snowpackSummary:
        type: string
        format: HTML
        description: HTML text describing the state of the snowpack
      weatherForecast:
        type: string
        format: HTML
        description: HTML Text describing the weather forecast
      avidOffseasonComment:
        type: string
        format: HTML
        description: >
          General per-forecast message describing the off-season conditions.
          This will only be present when the `fxFormat` field is set to
          `"avid"` and the `dangerMode` field is something other than `"Regular season"`
      avidOffseasonMessage:
        type: string
        format: HTML
        description: >
          A mostly static message that describes the `dangerMode`. This is
          indtended to display along side the large off season icon.
      dangerMode:
        $ref: '#/definitions/DangerModeOptions'
      avidTerrainAndTravel:
        description: >
            A list of terrain and travel advice. Like the values in
            `Problem.terrainAndTravelAdvice` but not related to a specfic forecast.
        type: array
        items:
          type: string
      dangerRatings:
        type: array
        maxItems: 3
        minItems: 3
        items:
          type: object
          required:
            - date
            - dangerRating
          properties:
            date:
              type: string
              format: date
              example: '2017-07-12T00:00:00'
            dangerRating:
              type: object
              required:
                - alp
                - tln
                - btl
              properties:
                alp:
                  $ref: '#/definitions/DangerRatingOptions'
                tln:
                  $ref: '#/definitions/DangerRatingOptions'
                btl:
                  $ref: '#/definitions/DangerRatingOptions'
      iconSet:
        description: >
          Describes the time spans that a region/locations danger icons should
          pass through. Each elements `from`/`to` fields will be in ISO8601
          datetime format with an included UTC offset and are to be interpreted
          as such. Interpreting these as local time or splitting the string to
          use only the date will likely in incorrect behavior.
          
          For each element except the first and last will have the property
          that `iconSet[n].to == iconSet[n+1].from`
        type: array
        items:
          type: object
          properties:
            from:
              type: string
              format: datetime
            to:
              type: string
              format: datetime
            iconType: {type: string, enum: ["RATINGS", "SPRING", "OFF_SEASON", "EARLY_SEASON"]}
            ratings:
              description: |
                When the `iconType` is set to "RATINGS" this object will contain the danger ratings to use
              type: object
              properties:
                alp: {type: integer, minimum: 0, maximum: 5}
                tln: {type: integer, minimum: 0, maximum: 5}
                btl: {type: integer, minimum: 0, maximum: 5}
          required: ["from", "to", "iconType"]

      problems:
        type: object
        required:
          - type
          - elevations
          - aspects
          - likelihood
          - expectedSize
          - comment
          - travelAndTerrainAdvice
        properties:
          type:
            type: string
            enum:
              - Loose Dry
              - Loose Wet
              - Wind Slabs
              - Storm Slabs
              - Wet Slabs
              - Persistent Slabs
              - Deep Persistent Slabs
              - Cornices
          elevations:
            type: array
            minItems: 1
            maxItems: 3
            items:
              type: string
              enum:
                - Alp
                - Tln
                - Btl
          aspects:
            type: array
            minItems: 1
            maxItems: 8
            items:
              type: string
              enum:
                - 'N'
                - NE
                - E
                - SE
                - S
                - SW
                - W
                - NW
          likelihood:
            type: string
            enum:
              - Certain
              - Certain - Very Likely
              - Very Likely
              - Very Likely - Likely
              - Likely
              - Likely - Possible
              - Possible
              - Possible - Unlikely
              - Unlikely
          expectedSize:
            type: object
            required:
              - min
              - max
            properties:
              min:
                $ref: '#/definitions/AvalancheSizeOptions'
              max:
                $ref: '#/definitions/AvalancheSizeOptions'
          comment:
            type: string
            format: html
            description: Forecaster comments on the avalanche problem
          travelAndTerrainAdvice:
            type: string
            format: html
            description: >
              Advice for navigating the terrain with this avalanche problem.
              This value will only be populated if the the 'fxFormat' field is
              'avalx'. If the 'fxFormat' field is 'avid' then this string will
              be empty.
          icons:
            type: object
            description: >
              URLs for images describing the elevation, aspect, likelihood  and
              expected size of this avalanche problem
            properties:
              elevations:
                type: string
                format: url
              aspects:
                type: string
                format: url
              likelihood:
                type: string
                format: url
              expectedSize:
                type: string
                format: url
  FeaturesMetaDataCommon:
    type: object
    properties:
      name:
        type: string
        description: Printable name of the region
      id:
        type: string
        description: >
          Identifier for the region (used for urls and referencing)
      type:
        type: string
        description: >
          What type the region is.

          - *avalx* and *parks* types are forecasts, from Avalanche Canada and
          Parks canada respectivly.

          - *hotzone* represents hotzone reports and are not avaliable from the
          foreast api.

          - *link* forecasts are links to non-forecast produces for a specific
          geographic region. The *url* property will refer you to that product
        enum:
          - avalx
          - parks
          - hotzone
          - link
      centroid:
        type: array
        description: >
          The center of a geographic region. This is where the icon is usually
          drawn. Coordinates are in EPSG:4326 (WGS 84)
        items:
          type: number
          format: float
        minItems: 2
        maxItems: 2
        example:
          - -116.50157110775542
          - 51.501457954569304
      bbox:
        type: array
        description: >
          Rectangular bounding box for the map region. Useful for setting  the
          zoom to a specific region.  Coordinates are in EPSG:4326 (WGS 84)
        items:
          type: number
          format: float
        minItems: 4
        maxItems: 4
        example:
          - -116.6208961499071
          - 51.36571861362334
          - -116.362468
          - 51.65117936064157

      url:
        type: string
        description: >
          * For *parks* and *avalx* type forecasts this is a reference to
          the
            CAAML xml for the forecast

          * For *link* forecasts this is a link to the non-forecast
          product
      externalUrl:
        type: string
        description: >
          Only exits for *parks* forecasts and is the same as the *url*
          field
        example: 'http://avalanche.pc.gc.ca/bulletin-eng.aspx?r=1&d=TODAY'
      forecastUrl:
        type: string
        description: >
          Reference to the forecast json API endpoint that will retreive
          Exists only for *avalx* and *parks* forecasts.
        example: /api/forecasts/banff-yoho-kootenay.json
      dangerIconUrl:
        type: string
        description: >
          Endpoint to get a forecast icon for the currently issued
          forecast for this region
        example: /api/forecasts/banff-yoho-kootenay/danger-rating-icon.svg
      owner:
        type: string
        description: The owner of the forecast

  ForecastGeoJSON:
    type: object
    required:
      - type
      - features
    properties:
      type:
        type: string
        enum: 
          - "FeatureCollection"
      features:
        type: array
        items: 
          type: object
          required:
            - type
            - id
            - geometry
            - properties
          properties:
            type:
              type: string
              enum:
                - "Polygon"
            id:
              type: string
              example: "cariboos"
            geometry:
              type: object
              description: "GeoJSON Geometry Object. See  https://tools.ietf.org/html/rfc7946#section-3.1"
            properties:
              type: object
              required:
                - name
                - id
                - type
                - centroid
              properties:
                name:
                  $ref: '#/definitions/FeaturesMetaDataCommon/properties/name'
                id:
                  $ref: '#/definitions/FeaturesMetaDataCommon/properties/id'
                type:
                  $ref: '#/definitions/FeaturesMetaDataCommon/properties/type'
                centroid:
                  $ref: '#/definitions/FeaturesMetaDataCommon/properties/centroid'
                url:
                  $ref: '#/definitions/FeaturesMetaDataCommon/properties/url'
                externalUrl:
                  $ref: '#/definitions/FeaturesMetaDataCommon/properties/externalUrl'
                foreacstUrl:
                  $ref: '#/definitions/FeaturesMetaDataCommon/properties/forecastUrl'
                dangerIconUrl:
                  $ref: '#/definitions/FeaturesMetaDataCommon/properties/dangerIconUrl'
                owner:
                  $ref: '#/definitions/FeaturesMetaDataCommon/properties/owner'
  MountainConditionsReport:
    type: object
    properties:
      id:
        type: number
        format: int64
      title:
        type: string
      user:
        type: object
        properties:
          id:
            type: number
            format: int64
          image:
            type: string
            format: url
          name:
            type: string
          certs:
            type: string
      location_desc:
        type: string
      body:
        type: string
      location:
        type: array
        minItems: 2
        maxItems: 2
        items:
          type: number
          format: float
        example:
          - -116.50157110775542
          - 51.501457954569304
      dates:
        type: array
        minItems: 1
        maxItems: 2
        items:
          type: string
          format: date-time
      images:
        type: array
        items:
          type: string
          format: url
      groups:
        type: array
        items:
          type: object
          properties:
            name:
              type: string
            logo:
              type: string
              format: url
      permalink:
        type: string
        format: url

  DangerRatingOptions:
    type: string
    enum:
      - '1:Low'
      - '2:Moderate'
      - '3:Considerable'
      - '4:High'
      - '5:Extreme'
      - 'N/A:No Rating'
      - 'N/A:''Spring'''
    example: '3:Considerable'
  DangerModeOptions:
    type: string
    enum:
      - Regular season
      - Spring situation
      - Off season
      - Early season
    example: Regular season
  AvalancheSizeOptions:
    type: string
    enum:
      - '0.5'
      - '1.0'
      - '1.5'
      - '2.0'
      - '2.5'
      - '3.0'
      - '3.5'
      - '4.0'
      - '4.5'
      - '5.0'
